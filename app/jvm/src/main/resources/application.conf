akka {
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  default-dispatcher {
    fork-join-executor {
      parallelism-min = 8
    }
  }
  test {
    timefactor = 1
  }

  actor {
    deployment {

      # character id in memory pool
      /characterIDPool {
        router = round-robin-pool
        nr-of-instances = 8
      }

      # eve xml characterid actor pool
      # actual requests are done via spray futures, only grouping in actors
      /eveCharacterIDPool {
        router = round-robin-pool
        nr-of-instances = 8
      }

      # character info in memory pool
      /characterInfoPool {
        router = round-robin-pool
        nr-of-instances = 8
      }

      # eve xml characterinfo actor pool
      # actual requests are done via spray futures
      /eveCharacterInfoPool {
        router = round-robin-pool
        nr-of-instances = 8
      }

      # zkillboard status in memory cache pool
      /zkStatsPool {
        router = round-robin-pool
        nr-of-instances = 8
      }

      # zkillboard rest api pool
      /restZkStatsPool {
        router = round-robin-pool
        nr-of-instances = 8
      }


    }
  }
}

spray {
  can {
    server {
      server-header = "Random's Little Helper"
      # needs to be longer than ajax-timeout - otherwise ajax exceptions because the server stops
      request-timeout = 40 s
      idle-timeout = 60 s
    }
    client {
      request-timeout = 20 s
      idle-timeout = 120 s
    }
    host-connector {
      max-retries = 0
      idle-timeout = 120 s
    }
  }
}

little-helper {
  xml-api {

    # refresh this many stale cache entries per request
    refresh-stale: 10

    # ajax-timeout: less than request-timeouts!
    ajax-timeout: 15s

    # ajax-timeout-long: a longer timeout ... ajax-timeout is supposed to expire before this one
    # this is necessary so errors can be handled gracefully ... if a future outside of the error
    # handling code expires first, the code can't handle the errors ...
    ajax-timeout-long: 30s

  }
}

http {
  host = "0.0.0.0"
  host = ${?HOST}
  port = 5000
  port = ${?PORT}
}
