akka {
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  default-dispatcher {
    fork-join-executor {
      parallelism-min = 8
    }
  }
  test {
    timefactor = 1
  }

  actor {
    deployment {

      # character id in memory pool
      /characterIDPool {
        router = round-robin-pool
        nr-of-instances = 4
      }

      # eve xml characterid actor pool
      # actual requests are done via spray futures, only grouping in actors
      /eveCharacterIDPool {
        router = round-robin-pool
        nr-of-instances = 4
      }

      # eve character info retrievers
      /characterInfoRetrievers {
        router = round-robin-pool
        nr-of-instances = 4
      }

      # zkillboard retrievers
      /zkStatsRetrievers {
        router = round-robin-pool
        nr-of-instances = 4
      }
    }
  }
}

spray {
  can {
    server {
      server-header = "Random's Little Helper"
      # needs to be longer than ajax-timeout - otherwise ajax exceptions because the server stops
      request-timeout = 40 s
      idle-timeout = 60 s
      remote-address-header = on
    }
    client {
      request-timeout = 20 s
      idle-timeout = 120 s
    }
    host-connector {
      max-retries = 0
      idle-timeout = 120 s
    }
  }
}

little-helper {
  xml-api {

    # XXX delete me
    # refresh this many stale cache entries per request
    refresh-stale: 10

    # rest-timeout: less than request-timeouts!
    #   this is the one used by ZkStatsRetriever/CharacterInfoRetriever
    rest-timeout: 15s

    # ajax-future-timeout: a longer timeout ... for the futures waiting for completion of
    #   all rest requests.  usually these will not fail, but rather the rest-timeout used
    #   by the rest requests, which will cause incomplete but usable information to be returned
    ajax-future-timeout: 30s

    # compress requests/responses
    use-compression: true

  }
}

http {
  host = "0.0.0.0"
  host = ${?HOST}
  port = 5000
  port = ${?PORT}
}
